---
- name: add the official Sensu repository key
  apt_key: url=http://repos.sensuapp.org/apt/pubkey.gpg state=present
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: add the official Sensu repository
  copy:
    src=sensu-server.list
    dest=/etc/apt/sources.list.d/
    backup=yes
  register: aptrepo
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: refresh apt cache
  apt: update_cache=yes
  when: aptrepo.changed and (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')

- name: install sensu
  apt: name=sensu state=present
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: add the official Sensu repository
  copy: src=sensu.repo dest=/etc/yum.repos.d/sensu.repo
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: install sensu
  yum: name=sensu state=present
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: set which Ruby to use
  lineinfile:
    dest=/etc/default/sensu
    regexp=^EMBEDDED_RUBY=
    line=EMBEDDED_RUBY={{ sensu_server_embedded_ruby }}

- name: set which user to use
  lineinfile:
    dest=/etc/default/sensu
    regexp=^USER=
    line=USER={{ sensu_user }}

- name: create the SSL directory
  file:
    path=/etc/sensu/ssl
    owner="{{ sensu_user }}"
    group="{{ sensu_group }}"
    mode=0750
    state=directory

- name: copy the client cert and key
  copy:
    src=client_{{ item }}.pem
    dest=/etc/sensu/ssl/{{ item }}.pem
    owner="{{ sensu_user }}"
    group="{{ sensu_group }}"
    mode=0640
    backup=yes
  with_items:
    - cert
    - key

- name: generate /etc/sensu/config.json
  template:
    src=sensu.config.json.j2
    dest=/etc/sensu/config.json
    owner="{{ sensu_user }}"
    group="{{ sensu_group }}"
    mode=0640
    backup=yes
  notify:
    - restart sensu server
    - restart sensu client
