---
- name: add the official Sensu repository's key (Debian)
  apt_key: url=http://repos.sensuapp.org/apt/pubkey.gpg state=present
  when: ansible_os_family == "Debian"

- name: add the official Sensu repository (Debian)
  copy:
    src=sensu-server.list
    dest=/etc/apt/sources.list.d/
    backup=yes
  register: aptrepo
  when: ansible_os_family == "Debian"

- name: refresh apt cache
  apt: update_cache=yes
  when: aptrepo.changed and ansible_os_family == "Debian"

- name: add the official Sensu repository (RedHat/CentOS)
  copy:
    src=sensu.repo
    dest=/etc/yum.repos.d/
    backup=yes
  register: yumrepo
  when: ansible_os_family == "RedHat"

- name: install sensu (Debian)
  apt: name=sensu state=present
  when: ansible_os_family == "Debian"

- name: install sensu (RedHat/CentOS)
  yum: name=sensu state=present
  when: ansible_os_family == "RedHat"

- name: set which Ruby to use
  lineinfile:
    dest=/etc/default/sensu
    regexp=^EMBEDDED_RUBY=
    line=EMBEDDED_RUBY={{ sensu_embedded_ruby }}

- name: set which user to use
  lineinfile:
    dest=/etc/default/sensu
    regexp=^USER=
    line=USER={{ sensu_user }}

- name: create the SSL directory
  file:
    path=/etc/sensu/ssl
    owner="{{ sensu_user }}"
    group="{{ sensu_group }}"
    mode=0750
    state=directory
  when: not sensu_server_rabbitmq_insecure

- name: copy the SSL certificate & key
  copy:
    src={{ sensu_cert_dir }}/{{ item }}
    dest=/etc/sensu/ssl/{{ item }}
    owner="{{ sensu_user }}"
    group="{{ sensu_group }}"
    mode=0640
    backup=yes
  with_items:
    - "{{ sensu_cert_file_name }}"
    - "{{ sensu_key_file_name }}"
  when: not sensu_server_rabbitmq_insecure
  notify:
    - restart sensu server
    - restart sensu client

- name: generate rabbitmq.json
  template:
    src=rabbitmq.json.j2
    dest=/etc/sensu/conf.d/rabbitmq.json
    owner=sensu
    group=sensu
    mode=0640
    backup=yes
  notify:
    - restart sensu server
    - restart sensu client
